SET NOCOUNT ON
-- DataLoader is attempting to load 1 rows into Shelf_Label_Batch 
DECLARE @tTable TABLE (
  [insert_id] int IDENTITY (1, 1) PRIMARY KEY,
  [shelf_label_batch_id] int,
  [has_shelf_label_batch_id] bit,
  [business_unit_id] int,
  [has_business_unit_id] bit,
  [last_modified_timestamp] datetime,
  [has_last_modified_timestamp] bit,
  [client_id] int,
  [has_client_id] bit,
  [last_modified_user_id] int,
  [has_last_modified_user_id] bit,
  [status_code] nchar(1),
  [has_status_code] bit,
  [name] nvarchar(100),
  [has_name] bit
)
INSERT INTO @tTable
  SELECT
    4333340,
    1,
    1000816,
    1,
    '8/21/2018 2:01:51 PM',
    1,
    1000001,
    1,
    42,
    1,
    N'i',
    1,
    N'LOW Oil Additives & Peg 3ft x 54in',
    1
SET NOCOUNT ON
DECLARE @qry_start_time AS datetime
SET @qry_start_time = GETDATE()
DECLARE @TotalUploadedRowsCount int
SELECT
  @TotalUploadedRowsCount = COUNT(*)
FROM @tTable;
DECLARE @DuplicateRowCount int
SET @DuplicateRowCount = 0  /**************************************************************/
/*Delete any duplicate records from the table variable before inserting the data in it */
DELETE @tTable
  FROM @tTable t1
WHERE EXISTS (SELECT
    *
  FROM @tTable t2
  WHERE t1.business_unit_id = t2.business_unit_id
  AND t1.shelf_label_batch_id = t2.shelf_label_batch_id
  AND t1.insert_id < t2.insert_id)
SELECT
  @DuplicateRowCount = @@rowcount/**** Update existing data in Shelf_Label_Batch table ****/
UPDATE Shelf_Label_Batch
SET client_id =
               CASE
                 WHEN a.has_client_id = 1 THEN a.client_id
                 ELSE t.client_id
               END,
    last_modified_timestamp =
                             CASE
                               WHEN a.has_last_modified_timestamp = 1 THEN a.last_modified_timestamp
                               ELSE t.last_modified_timestamp
                             END,
    last_modified_user_id =
                           CASE
                             WHEN a.has_last_modified_user_id = 1 THEN a.last_modified_user_id
                             ELSE t.last_modified_user_id
                           END,
    name =
          CASE
            WHEN a.has_name = 1 THEN a.name
            ELSE NULL
          END,
    status_code =
                 CASE
                   WHEN a.has_status_code = 1 THEN a.status_code
                   ELSE t.status_code
                 END
FROM @tTable a
JOIN Shelf_Label_Batch t
  ON t.business_unit_id = a.business_unit_id
  AND t.shelf_label_batch_id = a.shelf_label_batch_id  /***** Insert new data into Shelf_Label_Batch table *****/
INSERT INTO Shelf_Label_Batch (business_unit_id, shelf_label_batch_id, client_id, last_modified_timestamp, last_modified_user_id, name, status_code)
  SELECT
    business_unit_id,
    shelf_label_batch_id,
    client_id,
    last_modified_timestamp,
    last_modified_user_id,
    name,
    status_code
  FROM @tTable a
  WHERE NOT EXISTS (SELECT
    1
  FROM Shelf_Label_Batch t
  WHERE t.business_unit_id = a.business_unit_id
  AND t.shelf_label_batch_id = a.shelf_label_batch_id)
DECLARE @qry_end_time AS datetime
SET @qry_end_time = GETDATE()
SELECT
  1000001 AS org_hierarchy_id,
  NULL AS business_date,
  NULL AS start_time,
  NULL AS end_time,
  COUNT(*) AS row_count,
  @TotalUploadedRowsCount AS uploaded_row_count,
  @DuplicateRowCount AS duplicate_row_count,
  @qry_start_time AS query_start_time,
  @qry_end_time AS query_end_time
FROM @tTable a